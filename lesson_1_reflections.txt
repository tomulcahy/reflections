How did viewing a diff between two versions of a file help you see the bug that
was introduced?

By providing a side-by-side comparison of the two versions.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Less time spent trying to find and undo mistakes, means more time spent on more time spent on productive activities.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pro -- control over making logical commits
Con -- easy to forget to do it often enough, or too frequently.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Coding usually involves multiple files, that are often inter-related.  Committing changes across a group of related files makes sense.

How can you use the commands git log and git diff to view the history of files?

Git log shows the commit history.  Git diff show the differences between any two commits.

How might using version control make you more confident to make changes that
could break something?

I know that I have a good back up, so breaks don't have to be so scary!

Now that you have your workspace set up, what do you want to try using Git for?

I'd like to start using git for all my code!
